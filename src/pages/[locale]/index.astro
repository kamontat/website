---
import { Picture } from "astro:assets";

import DefaultLayout from "@layouts/DefaultLayout/DefaultLayout.astro";
import Container from "@components/molecules/Container/Container.astro";
import Heading from "@components/atoms/Heading/Heading.svelte";
import Caption from "@components/atoms/Caption/Caption.svelte";
import Paragraph from "@components/atoms/Paragraph/Paragraph.svelte";
import Div from "@components/atoms/Div/Div.svelte";
import Badge from "@components/atoms/Badge/Badge.svelte";
import Link from "@components/atoms/Link/Link.svelte";

import { getStaticPathsWithLocale } from "@core/utils/path";
import { getCollections, getSingleton } from "@core/contents";

export const getStaticPaths = getStaticPathsWithLocale();

const { locale } = Astro.params;
const information = await getSingleton("information");
const links = await getCollections("links");
const ui = await getSingleton("ui");

const name = `${information.must("firstName", locale)} ${information.must("lastName", locale)}`;
---

<DefaultLayout title={ui.must("page.home.title", locale)} {locale}>
	<Container>
		<Div class="items-center justify-center md:flex-row">
			<Picture
				src={information.must("profilePicture")}
				alt="profile picture"
				formats={["avif", "webp"]}
				layout="constrained"
				loading="lazy"
				class="mb-2 rounded-2xl min-w-60 w-68 md:min-w-50 md:w-58"
			/>
			<Div class="ml-4">
				<Heading
					level={1}
					class="text-primary-light text-center black:text-primary-black dark:text-primary-dark md:text-left"
				>
					{name}
					<span class="font-medium">
						({information.must("nickName", locale)})
					</span>
				</Heading>
				<Caption class="mt-1 text-center md:text-left">
					<span class="font-normal">{information.must("title", locale)}</span>
					@
					{information.must("company", locale)}
				</Caption>

				<Paragraph class="mt-2">
					{information.must("summary", locale)}
				</Paragraph>
			</Div>
		</Div>
		<Div class="mt-4 flex-row flex-wrap gap-5 items-center justify-center">
			{
				links
					.filter((link) => link.get("quickaccess") === true)
					.sort((a, b) => (a.get("priority") ?? 0) - (b.get("priority") ?? 0))
					.map((link) => (
						<Link
							href={link.must("url", locale)}
							baseLink={Astro.site!.origin}
							builtinStyles={false}
							external={link.get("external")}
							prefetch={link.get("prefetch")}
						>
							<Badge iconClass={link.get("icon")}>
								{link.must("name", locale)}
							</Badge>
						</Link>
					))
			}
		</Div>
	</Container>
</DefaultLayout>
