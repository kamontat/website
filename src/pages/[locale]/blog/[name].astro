---
import type { BaseProps } from "@core/types/astro";
import type { LocaleName, StaticPathsItem } from "@core/types";

import BlogLayout from "@layouts/BlogLayout.astro";
import Title from "@components/atoms/Title.svelte";

import { getCollections, getCollection } from "@core/contents";

interface Parameters {
	locale: LocaleName;
	name: string;
}

type Props = BaseProps<{
	slug: string;
}>;

// NOTE: If post on alternative languages is missing, use existed language instead
// FIXME: We should disable LocaleSwitch on unsupported page instead
export const getStaticPaths = async () => {
	const posts = await getCollections("posts");
	return posts.map((post) => {
		const slug = post.id;
		const [locale, name] = slug.split("/");
		return {
			params: { locale, name },
			props: { slug },
		} as StaticPathsItem<Parameters, Props>;
	});

	// Map<name, {[locale]: slug}>
	// const mapper: Record<string, Record<LocaleName, string>> = {};
	// posts.map((post) => {
	// 	const slug = post.id;
	// 	const [locale, name] = slug.split("/");
	// 	if (!mapper[name]) {
	// 		mapper[name] = {
	// 			en: slug,
	// 			th: slug,
	// 		};
	// 	} else {
	// 		const previous = mapper[name]!;
	// 		mapper[name] = {
	// 			...previous,
	// 			[locale]: slug,
	// 		};
	// 	}
	// });

	// return Object.entries(mapper).flatMap(([name, slug]) => {
	// 	const build = (locale: LocaleName) =>
	// 		({
	// 			params: {
	// 				locale,
	// 				name,
	// 			},
	// 			props: {
	// 				slug: slug[locale],
	// 			},
	// 		}) as StaticPathsItem<Parameters, Props>;

	// 	return [build("en"), build("th")];
	// });
};

const { locale } = Astro.params;
const { slug } = Astro.props;

const post = await getCollection("posts", slug);
const { Content } = await post.render();
---

<BlogLayout title={post.must("title")} {locale}>
	<Title text={post.must("title")} />
	<Content />
</BlogLayout>
